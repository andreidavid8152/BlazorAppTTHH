@page "/empleados"

@using BlazorAppTTHH.Mediator
@using BlazorAppTTHH.Models

@inject IMediatorAPI _mediator
@inject IJSRuntime JSRuntime

<style>
    body {
        background-color: #bacde6;
    }
</style>


<h1 class="mb-6 mt-4 text-4xl font-extrabold leading-none tracking-tight dark:text-black">EMPLEADOS</h1>

<form class="max-w-sm mx-auto" style="margin-left:500px" @onsubmit="HandleSubmit">
    <div class="mb-5">
        <label class="block mb-2 text-lg font-medium">Sucursal</label>
        <input @bind="SucursalId" type="number" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-sm-light" placeholder="Ingrese una sucursal" required>
    </div>
    <button type="submit" class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800 mr-6 ml-2">Buscar</button>
</form>

<div class="flex justify-center items-center p-4 mb-6" style="margin-left:315px">
    <!-- Contenedor centrado con padding -->
    <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
        <table id="empleadosTable" class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
            <thead class="text-xs text-gray-700 uppercase dark:text-gray-400">
                <tr>
                    <th scope="col" class="px-6 py-3 bg-gray-50 dark:bg-gray-800">ID</th>
                    <th scope="col" class="px-6 py-3 bg-gray-50 dark:bg-gray-800">Tipo T</th>
                    <th scope="col" class="px-6 py-3 bg-gray-50 dark:bg-gray-800">Apellido Paterno</th>
                    <th scope="col" class="px-6 py-3 bg-gray-50 dark:bg-gray-800">Apellido Materno</th>
                    <th scope="col" class="px-6 py-3 bg-gray-50 dark:bg-gray-800">Nombres</th>
                    <th scope="col" class="px-6 py-3 bg-gray-50 dark:bg-gray-800">Identificacion</th>
                    <th scope="col" class="px-6 py-3 bg-gray-50 dark:bg-gray-800">Entidad Bancaria</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trabajador in trabajadores)
                {
                    <tr class="border-b border-gray-200 dark:border-gray-700">
                        <td class="px-6 py-4 bg-gray-50 dark:bg-gray-800">@trabajador.Id_Trabajador</td>
                        <td class="px-6 py-4 bg-gray-50 dark:bg-gray-800">@trabajador.Tipo_Trabajador</td>
                        <td class="px-6 py-4 bg-gray-50 dark:bg-gray-800">@trabajador.Apellido_Paterno</td>
                        <td class="px-6 py-4 bg-gray-50 dark:bg-gray-800">@trabajador.Apellido_Materno</td>
                        <td class="px-6 py-4 bg-gray-50 dark:bg-gray-800">@trabajador.Nombres</td>
                        <td class="px-6 py-4 bg-gray-50 dark:bg-gray-800">@trabajador.Identificacion</td>
                        <td class="px-6 py-4 bg-gray-50 dark:bg-gray-800">@trabajador.Entidad_Bancaria</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {
    private List<Trabajador> trabajadores = new List<Trabajador>();
    private int SucursalId;

    private async Task HandleSubmit()
    {
        try
        {
            trabajadores = await _mediator.ObtenerTrabajadoresPorSucursal(SucursalId); // Asumiendo que 17 es la sucursal de ejemplo
            // Aquí llamas al método que hemos creado anteriormente.
            await JSRuntime.InvokeVoidAsync("initEmpleadosTable");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", "No existe esa sucursal"); // Muestra una alerta con el mensaje de error
        }
    }
}
